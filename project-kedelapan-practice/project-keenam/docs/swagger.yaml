basePath: /
definitions:
  models.Employee:
    properties:
      age:
        type: integer
      createdAt:
        type: string
      division:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: Employee API CRUD
    url: http://www.swagger.io/support
  description: Just for Practice Go Programming Language
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: API Employee Hacktiv8 Practice
  version: "1.0"
paths:
  /employees:
    get:
      consumes:
      - application/json
      description: list all of employee
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Employee'
            type: array
      summary: list all of employee
      tags:
      - employees
    post:
      consumes:
      - application/json
      description: create an employee
      parameters:
      - description: create employee
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Employee'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Employee'
      summary: create an employee
      tags:
      - employees
  /employees/{employee_id}:
    delete:
      consumes:
      - application/json
      description: delete employee
      parameters:
      - description: employee_id
        in: path
        name: employee_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Employee'
      summary: delete employee
      tags:
      - employees
    get:
      consumes:
      - application/json
      description: show employee
      parameters:
      - description: employee_id
        in: path
        name: employee_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Employee'
      summary: show employee
      tags:
      - employees
    put:
      consumes:
      - application/json
      description: update employee
      parameters:
      - description: employee_id
        in: path
        name: employee_id
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Employee'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Employee'
      summary: update employee
      tags:
      - employees
swagger: "2.0"
